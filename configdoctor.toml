# ./configdoctor.toml
# This file uses TOML, which we also lint :)

[general]
# Output verbosity level: "quiet", "normal", "verbose"
verbosity = "normal"
# Output format: "human" (pretty rich), "json" (for CI), "github" (for GitHub Actions annotations)
output_format = ["human", "json"]
# Use colored output (only for "human" format)
color = true
# Automatically apply fixes where possible (e.g., formatting)
apply_fixes = false

# Global file inclusion/exclusion settings
[files]
# Include these patterns (glob patterns)
include = [
    "**/*.yaml",
    "**/*.yml",
    "**/*.toml",
    "**/*.json",
    "**/Dockerfile",
    "**/docker-compose*.yml",
    "**/.env*",
    "**/*.ini",
    "**/nginx.conf",
]
# Exclude these patterns
exclude = [
    "**/node_modules/**",
    "**/.git/**",
    "**/.venv/**",
    "**/vendor/**",
    "**/tmp/**",
]

# Built-in parser settings
[parsers]
# Use safe YAML loader (only simple data types, won't call Python constructors)
yaml_safe_load = true
# Allow duplicate keys in YAML (usually an error)
yaml_allow_duplicates = false
# Allow anchors and aliases in YAML
yaml_allow_anchors = true

# Rules and plugins configuration
# This section defines which rules are active and with which parameters
[rules]

  # Global rule disabling by ID
  disable = [
    "yaml::truthy::use-boolean", # Too strict for some configs
    "dockerfile::recommended::no-root", # Exception for specific image
  ]

  # Global rule enabling (useful for rules disabled by default)
  enable = [
    "general::file-naming::kebab-case", # Enable additional rule
  ]

  # Rule-specific parameter configuration
  [rules.options]

    # Rule: Line length should not exceed maximum characters
    [rules.options."general::format::line-length"]
    max = 120 # Change maximum line length
    ignore_comments = true # Ignore comment lines

    # Rule: Avoid using latest tag in Dockerfile
    [rules.options."dockerfile::security::avoid-latest-tag"]
    # Exception list (images where latest is allowed)
    allowed_images = ["nginx", "alpine", "redis"]

    # Rule: Version pinning check in docker-compose
    [rules.options."compose::best-practices::pin-version"]
    # Validation mode: "error" - error, "warning" - warning, "off" - disabled
    mode = "warning"
    # Ignore specific services
    ignore_services = ["local-dev-service"]

    # Rule: Required fields check for application config
    [rules.options."custom-myapp::required-fields"]
    # This plugin and rule will be loaded from custom_path
    required_fields = ["version", "api_key", "environment"]

# Plugin settings (loading and behavior)
[plugins]
  # Paths to custom plugins (absolute or relative to project root)
  custom_paths = ["./devops/configdoctor_plugins"]

  # Plugin-specific settings
  [plugins.dockerfile]
    # Allow specific RUN commands that are normally prohibited (e.g., apt-get upgrade)
    allowed_run_commands = ["apt-get update && apt-get install -y my-package"]

  [plugins.yaml]
    # Require explicit YAML version directive in documents (e.g., %YAML 1.2)
    require_explicit_version = false

  [plugins.compose]
    # Validate against specific docker-compose specification version
    target_version = "3.8"

# Output settings (Reporting)
[output]
  # Group errors by: "file" or by rule type ("rule")
  group_by = "file"

  # Settings for "human" format
  [output.human]
    # Show rule documentation link
    show_documentation_link = true
    # Show fix suggestion
    show_suggestion = true

  # Settings for "json" format
  [output.json]
    # Include source code of problematic line in output
    include_source_code = false
    # Pretty-print output (with indentation) or compact
    pretty = true

  # Settings for "github" format
  [output.github]
    # Use workflow commands for output
    use_workflow_commands = true

# Profiles - predefined rule sets (activatable via --profile)
[profiles]

  [profiles.strict]
    description = "Maximum strict rule set for production"
    enable = [
      "dockerfile::security::*",
      "compose::best-practices::*",
      "yaml::best-practices::*",
    ]
    [profiles.strict.rules.options]
      [profiles.strict.rules.options."general::format::line-length"]
      max = 100

  [profiles.dev]
    description = "Development profile with relaxed warnings"
    disable = [
      "dockerfile::security::avoid-latest-tag",
      "compose::best-practices::pin-version",
    ]

# File path-based overrides
# Allows special rules for specific paths
[[overrides]]
  files = ["**/dev/**", "**/staging/**"]
  [overrides.rules]
    disable = [
      "yaml::security::no-ssh-urls", # Staging may have custom repositories
    ]
    [overrides.rules.options]
      [overrides.rules.options."dockerfile::security::avoid-latest-tag"]
      mode = "warning" # Only warning in staging

[[overrides]]
  files = ["**/production/**"]
  [overrides.rules]
    enable = ["*::security::*"] # Enable all security rules
    [overrides.rules.options]
      [overrides.rules.options."dockerfile::security::avoid-latest-tag"]
      mode = "error" # Strict error in production
